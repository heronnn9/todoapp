{"ast":null,"code":"var _jsxFileName = \"/Users/berkeakgun/Desktop/Projects/React/To_Do_APP2/todoapp2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport \"../src/Components/Container\";\nimport Container from \"../src/Components/Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n  const [isChecked, setIsChecked] = useState(false);\n  const [selects, setSelects] = useState(\"\");\n  const [select, setSelect] = useState([]);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n\n  function IsChanged() {\n    setIsChecked(!isChecked);\n  }\n\n  function listCategorized() {\n    let obj = selects.find(x => x.id === todo.categoryId).text;\n    console.log(obj);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newTodo = {\n      text: todo,\n      categoryId: parseInt(selectedValue),\n      completed: isChecked\n    };\n    setTodos([...todos, newTodo]);\n    setTodo(\"\");\n  }\n\n  function addCategory(e) {\n    e.preventDefault();\n    const newCategory = {\n      text: selects,\n      id: select.length === 0 ? 1 : select[select.length - 1].id + 1\n    };\n\n    if (select.length === 0) {\n      setSelectedValue(1);\n    }\n\n    setSelect([...select, newCategory]);\n    setSelects(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Header\",\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addcategories\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setSelects(e.target.value),\n          type: \"text\",\n          value: selects,\n          className: \"input2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCategory,\n          children: \"add category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cekput\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          value: todo,\n          placeholder: \"Enter a new todo\",\n          onChange: e => setTodo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"cek\",\n          onChange: IsChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"buton\",\n        onClick: handleSubmit,\n        children: \"Do It\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"categories\",\n        name: \"categories\",\n        onChange: a => setSelectedValue(a.target.value),\n        children: select.map(selects => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: selects.id,\n          id: \"my-element\",\n          children: selects.text\n        }, selects.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      setTodo: setTodos,\n      todo: todos,\n      selects: select\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"botselect\",\n      children: select.map(selects => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bottombuton\",\n        onClick: listCategorized,\n        children: selects.text\n      }, selects.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cvLcwXDm/XLWlw2PiZn6q7pByXc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Container","App","todos","setTodos","todo","setTodo","isChecked","setIsChecked","selects","setSelects","select","setSelect","selectedValue","setSelectedValue","IsChanged","listCategorized","obj","find","x","id","categoryId","text","console","log","handleSubmit","e","preventDefault","newTodo","parseInt","completed","addCategory","newCategory","length","target","value","a","map"],"sources":["/Users/berkeakgun/Desktop/Projects/React/To_Do_APP2/todoapp2/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport \"../src/Components/Container\";\nimport Container from \"../src/Components/Container\";\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n  const [isChecked, setIsChecked] = useState(false);\n  const [selects, setSelects] = useState(\"\");\n  const [select, setSelect] = useState([]);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  function IsChanged() {\n    setIsChecked(!isChecked);\n  }\n  function listCategorized() {\n    let obj = selects.find((x) => x.id === todo.categoryId).text;\n    console.log(obj);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newTodo = {\n      text: todo,\n      categoryId: parseInt(selectedValue),\n      completed: isChecked,\n    };\n    setTodos([...todos, newTodo]);\n    setTodo(\"\");\n  }\n  function addCategory(e) {\n    e.preventDefault();\n    const newCategory = {\n      text: selects,\n      id: select.length === 0 ? 1 : select[select.length - 1].id + 1,\n    };\n\n    if (select.length === 0) {\n      setSelectedValue(1);\n    }\n    setSelect([...select, newCategory]);\n    setSelects(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"Header\">To Do List</header>\n      <form className=\"form\">\n        <div className=\"addcategories\">\n          <input\n            onChange={(e) => setSelects(e.target.value)}\n            type=\"text\"\n            value={selects}\n            className=\"input2\"\n          />\n          <button onClick={addCategory}>add category</button>\n        </div>\n        <div className=\"cekput\">\n          <input\n            type=\"text\"\n            className=\"input\"\n            value={todo}\n            placeholder=\"Enter a new todo\"\n            onChange={(e) => setTodo(e.target.value)}\n          ></input>\n          <input type=\"checkbox\" className=\"cek\" onChange={IsChanged} />\n        </div>\n        <button type=\"submit\" className=\"buton\" onClick={handleSubmit}>\n          Do It\n        </button>\n        <select\n          className=\"categories\"\n          name=\"categories\"\n          onChange={(a) => setSelectedValue(a.target.value)}\n        >\n          {select.map((selects) => (\n            <option key={selects.id} value={selects.id} id={\"my-element\"}>\n              {selects.text}\n            </option>\n          ))}\n        </select>\n      </form>\n      <Container setTodo={setTodos} todo={todos} selects={select} />\n\n      <div className=\"botselect\">\n        {select.map((selects) => (\n          <button\n            key={selects.id}\n            className=\"bottombuton\"\n            onClick={listCategorized}\n          >\n            {selects.text}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}